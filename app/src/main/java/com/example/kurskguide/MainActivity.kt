package com.example.kurskguide

import android.content.Intent
import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView
import androidx.appcompat.widget.SearchView
import com.google.android.material.bottomnavigation.BottomNavigationView
import com.google.android.material.floatingactionbutton.FloatingActionButton
import com.google.gson.Gson
import com.google.gson.reflect.TypeToken

class MainActivity : AppCompatActivity() {

    private lateinit var recyclerView: RecyclerView
    private lateinit var categoryAdapter: CategoryAdapter
    private lateinit var searchView: SearchView
    private lateinit var bottomNavigation: BottomNavigationView

    private val categories = listOf(
        Category("üèõÔ∏è", "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞", "–ü–∞–º—è—Ç–Ω–∏–∫–∏ –∏ –º—É–∑–µ–∏ –≥–æ—Ä–æ–¥–∞"),
        Category("üå≥", "–ü–∞—Ä–∫–∏ –∏ —Å–∫–≤–µ—Ä—ã", "–ú–µ—Å—Ç–∞ –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –∏ –ø—Ä–æ–≥—É–ª–æ–∫"),
        Category("üçΩÔ∏è", "–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –∫–∞—Ñ–µ", "–õ—É—á—à–∏–µ –º–µ—Å—Ç–∞ –¥–ª—è –ø–∏—Ç–∞–Ω–∏—è"),
        Category("üõçÔ∏è", "–¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã", "–®–æ–ø–ø–∏–Ω–≥ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"),
        Category("üé≠", "–¢–µ–∞—Ç—Ä—ã –∏ –∫–∏–Ω–æ", "–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è"),
        Category("üè®", "–û—Ç–µ–ª–∏", "–†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ –≥–æ—Ä–æ–¥–µ"),
        Category("‚õ™", "–•—Ä–∞–º—ã", "–†–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ –º–µ—Å—Ç–∞"),
        Category("üéì", "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "–í–£–ó—ã –∏ —à–∫–æ–ª—ã"),
        Category("üìç", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–µ—Å—Ç–∞", "–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
    )

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        initViews()
        setupRecyclerView()
        setupBottomNavigation()
        setupSearch()
    }

    override fun onResume() {
        super.onResume()
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –º–µ—Å—Ç –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        updateUserPlacesCategory()
    }

    private fun initViews() {
        recyclerView = findViewById(R.id.recyclerViewCategories)
        searchView = findViewById(R.id.searchView)
        bottomNavigation = findViewById(R.id.bottomNavigation)

        val fabMap: FloatingActionButton = findViewById(R.id.fabMap)
        fabMap.setOnClickListener {
            startActivity(Intent(this, MapActivity::class.java))
        }
    }

    private fun setupRecyclerView() {
        categoryAdapter = CategoryAdapter(getUpdatedCategories()) { category ->
            val intent = Intent(this, PlacesListActivity::class.java)
            intent.putExtra("category", category.name)
            startActivity(intent)
        }

        recyclerView.apply {
            layoutManager = LinearLayoutManager(this@MainActivity)
            adapter = categoryAdapter
        }
    }

    private fun setupBottomNavigation() {
        bottomNavigation.setOnItemSelectedListener { item ->
            when (item.itemId) {
                R.id.nav_home -> {
                    // –£–∂–µ –∑–¥–µ—Å—å
                    true
                }
                R.id.nav_favorites -> {
                    startActivity(Intent(this, FavoritesActivity::class.java))
                    true
                }
                R.id.nav_map -> {
                    startActivity(Intent(this, MapActivity::class.java))
                    true
                }
                R.id.nav_info -> {
                    startActivity(Intent(this, AboutCityActivity::class.java))
                    true
                }
                else -> false
            }
        }
    }

    private fun setupSearch() {
        searchView.setOnQueryTextListener(object : SearchView.OnQueryTextListener {
            override fun onQueryTextSubmit(query: String?): Boolean {
                query?.let {
                    val intent = Intent(this@MainActivity, SearchResultsActivity::class.java)
                    intent.putExtra("query", it)
                    startActivity(intent)
                }
                return true
            }

            override fun onQueryTextChange(newText: String?): Boolean {
                return false
            }
        })
    }

    private fun updateUserPlacesCategory() {
        val updatedCategories = getUpdatedCategories()
        categoryAdapter = CategoryAdapter(updatedCategories) { category ->
            val intent = Intent(this, PlacesListActivity::class.java)
            intent.putExtra("category", category.name)
            startActivity(intent)
        }
        recyclerView.adapter = categoryAdapter
    }

    private fun getUpdatedCategories(): List<Category> {
        val userPlacesCount = KurskPlacesData.getUserPlaces(this).size
        return categories.map { category ->
            if (category.name == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–µ—Å—Ç–∞") {
                if (userPlacesCount > 0) {
                    category.copy(description = "–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ ($userPlacesCount)")
                } else {
                    category.copy(description = "–î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –º–µ—Å—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–µ")
                }
            } else {
                category
            }
        }
    }
}

// –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
data class Category(
    val icon: String,
    val name: String,
    val description: String
)

data class Place(
    val id: Int,
    val name: String,
    val description: String,
    val fullDescription: String,
    val category: String,
    val address: String,
    val phone: String = "",
    val website: String = "",
    val workingHours: String = "",
    val imageUrl: String = "",
    val latitude: Double = 0.0,
    val longitude: Double = 0.0,
    val rating: Float = 0f
)

// –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö –ö—É—Ä—Å–∫–∞
object KurskPlacesData {
    val places = listOf(
        Place(
            1, "–ö—É—Ä—Å–∫–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å",
            "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –º–µ—Å—Ç–æ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞",
            "–ö—É—Ä—Å–∫–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å –±—ã–ª–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –≤ 1032 –≥–æ–¥—É. –ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥–∏–ª—Å—è –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–π –∫—Ä–µ–º–ª—å, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—â–∏—â–∞–ª –≥–æ—Ä–æ–¥ –æ—Ç –Ω–∞–±–µ–≥–æ–≤ –∫–æ—á–µ–≤–Ω–∏–∫–æ–≤. –°–µ–≥–æ–¥–Ω—è –Ω–∞ –º–µ—Å—Ç–µ –∫—Ä–µ–ø–æ—Å—Ç–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –º–µ–º–æ—Ä–∏–∞–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å.",
            "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞",
            "—É–ª. –°–æ–Ω–∏–Ω–∞, 1",
            "+7 (4712) 70-22-33",
            "http://kursk-museum.ru",
            "9:00-18:00",
            "",
            51.724124, 36.191233,
            4.5f
        ),
        Place(
            2, "–ó–Ω–∞–º–µ–Ω—Å–∫–∏–π —Å–æ–±–æ—Ä",
            "–ì–ª–∞–≤–Ω—ã–π –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π —Ö—Ä–∞–º –≥–æ—Ä–æ–¥–∞",
            "–ó–Ω–∞–º–µ–Ω—Å–∫–∏–π –∫–∞—Ñ–µ–¥—Ä–∞–ª—å–Ω—ã–π —Å–æ–±–æ—Ä ‚Äî –æ–¥–∏–Ω –∏–∑ –∫—Ä–∞—Å–∏–≤–µ–π—à–∏—Ö —Ö—Ä–∞–º–æ–≤ –ö—É—Ä—Å–∫–∞. –ü–æ—Å—Ç—Ä–æ–µ–Ω –≤ XVII –≤–µ–∫–µ –≤ —á–µ—Å—Ç—å —á—É–¥–æ—Ç–≤–æ—Ä–Ω–æ–π –∏–∫–æ–Ω—ã –ë–æ–∂–∏–µ–π –ú–∞—Ç–µ—Ä–∏ \"–ó–Ω–∞–º–µ–Ω–∏–µ\" –ö—É—Ä—Å–∫–æ–π-–ö–æ—Ä–µ–Ω–Ω–æ–π.",
            "–•—Ä–∞–º—ã",
            "—É–ª. –õ—É–Ω–∞—á–∞—Ä—Å–∫–æ–≥–æ, 4",
            "+7 (4712) 70-24-44",
            "https://–∫—É—Ä—Å–∫–∞—è-–µ–ø–∞—Ä—Ö–∏—è.—Ä—Ñ/",
            "7:00-19:00",
            "",
            51.727619, 36.192287,
            4.8f
        ),
        Place(
            3, "–ú–µ–º–æ—Ä–∏–∞–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å \"–ö—É—Ä—Å–∫–∞—è –¥—É–≥–∞\"",
            "–ü–∞–º—è—Ç–Ω–∏–∫ –≥–µ—Ä–æ—è–º –ö—É—Ä—Å–∫–æ–π –±–∏—Ç–≤—ã",
            "–ì—Ä–∞–Ω–¥–∏–æ–∑–Ω—ã–π –º–µ–º–æ—Ä–∏–∞–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å –ø–æ—Å–≤—è—â—ë–Ω –æ–¥–Ω–æ–º—É –∏–∑ –∫—Ä—É–ø–Ω–µ–π—à–∏—Ö —Å—Ä–∞–∂–µ–Ω–∏–π –í–µ–ª–∏–∫–æ–π –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã. –í–∫–ª—é—á–∞–µ—Ç –º—É–∑–µ–π, –¢—Ä–∏—É–º—Ñ–∞–ª—å–Ω—É—é –∞—Ä–∫—É –∏ –í–µ—á–Ω—ã–π –æ–≥–æ–Ω—å.",
            "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –º–µ—Å—Ç–∞",
            "–ö—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å, –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –ü–æ–Ω—ã—Ä–∏",
            "+7 (4712) 35-35-75",
            "https://gokursk.ru/",
            "10:00-18:00",
            "",
            52.297568, 36.309885,
            4.9f
        ),
        Place(
            4, "–ü–∞—Ä–∫ –ì–µ—Ä–æ–µ–≤ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π –≤–æ–π–Ω—ã",
            "–ì–ª–∞–≤–Ω—ã–π –ø–∞—Ä–∫ –≥–æ—Ä–æ–¥–∞ –¥–ª—è —Å–µ–º–µ–π–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞",
            "–ë–æ–ª—å—à–æ–π –ø–∞—Ä–∫ —Å –¥–µ—Ä–µ–≤—å—è–º–∏, –∞–ª–ª–µ—è–º–∏ –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫, –¥–µ—Ç—Å–∫–∏–º–∏ –ø–ª–æ—â–∞–¥–∫–∞–º–∏ –∏ –ø–∞–º—è—Ç–Ω–∏–∫–æ–º. –ò–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –≤—Å–µ–π —Å–µ–º—å–µ–π.",
            "–ü–∞—Ä–∫–∏ –∏ —Å–∫–≤–µ—Ä—ã",
            "—É–ª–∏—Ü–∞ –†–∞–¥–∏—â–µ–≤–∞",
            "+7 (4712) 35-28-91",
            "",
            "6:00-23:00",
            "",
            51.745214, 36.188631,
            4.3f
        ),
        Place(
            5, "–¢–µ–∞—Ç—Ä –¥—Ä–∞–º—ã –∏–º–µ–Ω–∏ –ê.–°. –ü—É—à–∫–∏–Ω–∞",
            "–°—Ç–∞—Ä–µ–π—à–∏–π —Ç–µ–∞—Ç—Ä –ö—É—Ä—Å–∫–∞",
            "–ö—É—Ä—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –¥—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ–∞—Ç—Ä –∏–º–µ–Ω–∏ –ê.–°. –ü—É—à–∫–∏–Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω –≤ 1792 –≥–æ–¥—É. –û–¥–∏–Ω –∏–∑ —Å—Ç–∞—Ä–µ–π—à–∏—Ö –ø—Ä–æ–≤–∏–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–µ–∞—Ç—Ä–æ–≤ –†–æ—Å—Å–∏–∏.",
            "–¢–µ–∞—Ç—Ä—ã –∏ –∫–∏–Ω–æ",
            "—É–ª. –õ–µ–Ω–∏–Ω–∞, 26",
            "+7 (4712) 51-42-44",
            "http://kurskdrama.ru",
            "–ö–∞—Å—Å–∞: 10:00-19:00",
            "",
            51.738991, 36.191853,
            4.6f
        ),
        Place(
            6, "–¢–†–¶ \"–ü—É—à–∫–∏–Ω—Å–∫–∏–π\"",
            "–ö—Ä—É–ø–Ω–µ–π—à–∏–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞",
            "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–æ—Ä–≥–æ–≤–æ-—Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä —Å –º–∞–≥–∞–∑–∏–Ω–∞–º–∏, –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–º, —Ñ—É–¥-–∫–æ—Ä—Ç–æ–º –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è–º–∏ –¥–ª—è –≤—Å–µ–π —Å–µ–º—å–∏.",
            "–¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã",
            "—É–ª. –õ–µ–Ω–∏–Ω–∞, 30",
            "+7 (4712) 777-777",
            "http://pushkinsky-kursk.ru",
            "10:00-22:00",
            "",
            51.737894, 36.192326,
            4.4f
        ),
        Place(
            7, "–†–µ—Å—Ç–æ—Ä–∞–Ω \"–°—Ç–∞—Ä—ã–π –≥–æ—Ä–æ–¥\"",
            "–õ—É—á—à–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω —Ä—É—Å—Å–∫–æ–π –∫—É—Ö–Ω–∏",
            "–£—é—Ç–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω —Å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π —Ä—É—Å—Å–∫–æ–π –∫—É—Ö–Ω–µ–π –∏ –¥–æ–º–∞—à–Ω–µ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –±–ª—é–¥–∞—Ö –∫—É—Ä—Å–∫–æ–π –∫—É—Ö–Ω–∏.",
            "–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –∫–∞—Ñ–µ",
            "—É–ª. –õ–µ–Ω–∏–Ω–∞, 45",
            "+7 (4712) 55-66-77",
            "",
            "12:00-24:00",
            "",
            51.727800, 36.188900,
            4.7f
        ),
        Place(
            8, "–û—Ç–µ–ª—å \"–ö—É—Ä—Å–∫\"",
            "–ö–æ–º—Ñ–æ—Ä—Ç–∞–±–µ–ª—å–Ω–∞—è –≥–æ—Å—Ç–∏–Ω–∏—Ü–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ",
            "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ—Ç–µ–ª—å –≤ —Å–∞–º–æ–º —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞ —Å –∫–æ–º—Ñ–æ—Ä—Ç–∞–±–µ–ª—å–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏ –∏ –æ—Ç–ª–∏—á–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º.",
            "–û—Ç–µ–ª–∏",
            "—É–ª. –õ–µ–Ω–∏–Ω–∞, 24",
            "+7 (4712) 70-70-70",
            "http://hotel-kursk.ru",
            "24/7",
            "",
            51.736665, 36.191790,
            4.2f
        )
    )

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–µ—Å—Ç–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –≤–∫–ª—é—á–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–µ—Å—Ç–∞
     */
    fun getPlacesByCategory(category: String, context: android.content.Context? = null): List<Place> {
        val allPlaces = if (context != null) {
            places + getUserPlaces(context)
        } else {
            places
        }
        return allPlaces.filter { it.category == category }
    }

    /**
     * –ü–æ–∏—Å–∫ –º–µ—Å—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É, –≤–∫–ª—é—á–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–µ—Å—Ç–∞
     */
    fun searchPlaces(query: String, context: android.content.Context? = null): List<Place> {
        val allPlaces = if (context != null) {
            places + getUserPlaces(context)
        } else {
            places
        }
        return allPlaces.filter {
            it.name.contains(query, ignoreCase = true) ||
                    it.description.contains(query, ignoreCase = true) ||
                    it.address.contains(query, ignoreCase = true)
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–µ—Å—Ç–∞ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ + –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ)
     */
    fun getAllPlaces(context: android.content.Context? = null): List<Place> {
        return if (context != null) {
            places + getUserPlaces(context)
        } else {
            places
        }
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –º–µ—Å—Ç–æ
     */
    fun saveUserPlace(context: android.content.Context, place: Place): Boolean {
        return try {
            val prefs = context.getSharedPreferences("user_places", android.content.Context.MODE_PRIVATE)
            val existingPlaces = getUserPlaces(context).toMutableList()

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–µ—Å—Ç–æ —Å —Ç–∞–∫–∏–º ID
            val existingIndex = existingPlaces.indexOfFirst { it.id == place.id }
            if (existingIndex != -1) {
                existingPlaces[existingIndex] = place // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ
            } else {
                existingPlaces.add(place) // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            }

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
            val gson = Gson()
            val json = gson.toJson(existingPlaces)
            prefs.edit().putString("places_json", json).apply()

            true
        } catch (e: Exception) {
            e.printStackTrace()
            false
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –º–µ—Å—Ç–∞
     */
    fun getUserPlaces(context: android.content.Context?): List<Place> {
        if (context == null) return emptyList()

        return try {
            val prefs = context.getSharedPreferences("user_places", android.content.Context.MODE_PRIVATE)
            val json = prefs.getString("places_json", null)

            if (json != null) {
                val gson = Gson()
                val type = object : TypeToken<List<Place>>() {}.type
                gson.fromJson<List<Place>>(json, type) ?: emptyList()
            } else {
                emptyList()
            }
        } catch (e: Exception) {
            e.printStackTrace()
            emptyList()
        }
    }

    /**
     * –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –º–µ—Å—Ç–æ
     */
    fun deleteUserPlace(context: android.content.Context, placeId: Int): Boolean {
        return try {
            val existingPlaces = getUserPlaces(context).toMutableList()
            val removed = existingPlaces.removeAll { it.id == placeId }

            if (removed) {
                val prefs = context.getSharedPreferences("user_places", android.content.Context.MODE_PRIVATE)
                val gson = Gson()
                val json = gson.toJson(existingPlaces)
                prefs.edit().putString("places_json", json).apply()
            }

            removed
        } catch (e: Exception) {
            e.printStackTrace()
            false
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –º–µ—Å—Ç–æ –ø–æ ID (–∏—â–µ—Ç —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –º–µ—Å—Ç)
     */
    fun getPlaceById(context: android.content.Context?, id: Int): Place? {
        val allPlaces = getAllPlaces(context)
        return allPlaces.find { it.id == id }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–µ—Å—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º
     */
    fun isUserPlace(context: android.content.Context?, placeId: Int): Boolean {
        return getUserPlaces(context).any { it.id == placeId }
    }
}